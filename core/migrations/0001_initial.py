# Generated by Django 4.2.1 on 2023-06-16 12:38

import core.untils.core_validator
import core.untils.universal_validator
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cinema', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_banner', models.CharField(help_text='Input name Banner', max_length=50, validators=[django.core.validators.MinLengthValidator(1)])),
                ('status_banner', models.BooleanField(default=True, help_text='Select status Banner')),
            ],
            options={
                'verbose_name': 'banner',
                'verbose_name_plural': 'banners',
            },
            bases=(models.Model, core.untils.universal_validator.UrlValidatorMixin, core.untils.universal_validator.CounterValidatorMixin),
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_cinema', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('name_cinema', models.CharField(help_text='Input name Cinema', max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('address_cinema', models.CharField(help_text='Input Address', max_length=200, validators=[django.core.validators.MinLengthValidator(1)])),
                ('location_cinema', models.DecimalField(decimal_places=6, help_text='Input Location', max_digits=9)),
            ],
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin),
        ),
        migrations.CreateModel(
            name='ContextAdvertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_context', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
            ],
            options={
                'verbose_name': 'context advertise',
                'verbose_name_plural': 'context advertises',
            },
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin),
        ),
        migrations.CreateModel(
            name='MailingTemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_mailing', models.FileField(blank=True, help_text='Upload an file. Supported formats: HTML', null=True, upload_to='static/mailing/')),
            ],
            options={
                'verbose_name': 'mailing template',
                'verbose_name_plural': 'mailing templates',
            },
            bases=(models.Model, core.untils.core_validator.TemplateValidator),
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_page', models.CharField(help_text='Input name Page', max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(1)])),
                ('status_page', models.BooleanField(default=True, help_text='Select status page')),
                ('data_create_page', models.DateTimeField(auto_now_add=True)),
                ('gallery_page', models.OneToOneField(blank=True, help_text='Select Gallery to Page', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery')),
                ('seo_page', models.OneToOneField(blank=True, help_text='Select SEO to Page', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.seo')),
            ],
            options={
                'verbose_name': 'page',
                'verbose_name_plural': 'pages',
                'ordering': ['data_create_page'],
            },
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin),
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_social', models.CharField(help_text='Input name to Social', max_length=50, validators=[django.core.validators.MinLengthValidator(1)])),
                ('url_social', models.URLField(blank=True, help_text='Input url to Social', max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'social',
                'verbose_name_plural': 'socials',
                'ordering': ['name_social'],
            },
            bases=(models.Model, core.untils.universal_validator.UrlValidatorMixin),
        ),
        migrations.CreateModel(
            name='AboutCinemaPage',
            fields=[
                ('pages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.pages')),
                ('description', models.TextField(blank=True, help_text='Input description to Page', null=True)),
                ('main_photo', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
            ],
            bases=('core.pages',),
        ),
        migrations.CreateModel(
            name='AdvertisePage',
            fields=[
                ('pages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.pages')),
                ('description', models.TextField(blank=True, help_text='Input description', null=True)),
                ('main_photo', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
            ],
            bases=('core.pages',),
        ),
        migrations.CreateModel(
            name='CafeBarPage',
            fields=[
                ('pages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.pages')),
                ('description', models.TextField(blank=True, help_text='Input description', null=True)),
                ('main_photo', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('menu_cafe_bar', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
            ],
            bases=('core.pages',),
        ),
        migrations.CreateModel(
            name='ChildrenRoomPage',
            fields=[
                ('pages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.pages')),
                ('description', models.TextField(blank=True, help_text='Input description', null=True)),
                ('main_photo', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
            ],
            bases=('core.pages',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('pages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.pages')),
                ('phone1', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Input Phone number1', max_length=128, null=True, region=None, unique=True)),
                ('phone2', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Input Phone number2', max_length=128, null=True, region=None, unique=True)),
                ('seo_text', models.TextField(blank=True, help_text='Input seo text', null=True)),
            ],
            bases=('core.pages',),
        ),
        migrations.CreateModel(
            name='VipHallPage',
            fields=[
                ('pages_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.pages')),
                ('description', models.TextField(blank=True, help_text='Input description', null=True)),
                ('main_photo', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
            ],
            bases=('core.pages',),
        ),
        migrations.CreateModel(
            name='SharesPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Input name', max_length=50, validators=[django.core.validators.MinLengthValidator(1)])),
                ('description', models.TextField(blank=True, help_text='Input description to Page', null=True)),
                ('main_photo', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('url_address', models.URLField(blank=True, help_text='Input url address to Page', null=True)),
                ('data_published', models.DateField(default=datetime.datetime.now)),
                ('seo', models.OneToOneField(blank=True, help_text='Select SEO', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.seo')),
            ],
            options={
                'verbose_name': 'share',
                'verbose_name_plural': 'shares',
                'ordering': ['name'],
            },
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin, core.untils.universal_validator.UrlValidatorMixin),
        ),
        migrations.CreateModel(
            name='NewsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Input name', max_length=50, validators=[django.core.validators.MinLengthValidator(1)])),
                ('description', models.TextField(blank=True, help_text='Input description to Page', null=True)),
                ('main_photo', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('url_address', models.URLField(blank=True, help_text='Input url address to Page', null=True)),
                ('data_published', models.DateField(default=datetime.datetime.now)),
                ('seo', models.OneToOneField(blank=True, help_text='Select SEO', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.seo')),
            ],
            options={
                'verbose_name': 'new',
                'verbose_name_plural': 'news',
                'ordering': ['name'],
            },
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin, core.untils.universal_validator.UrlValidatorMixin),
        ),
        migrations.CreateModel(
            name='MobileApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_application', models.CharField(help_text='Input name to Application', max_length=50, validators=[django.core.validators.MinLengthValidator(1)])),
                ('description_application', models.TextField(blank=True, help_text='Input description to Application', null=True)),
                ('url_application', models.URLField(blank=True, help_text='Input url to Application', max_length=300, null=True)),
                ('gallery_application', models.OneToOneField(blank=True, help_text='Select Gallery to Application', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery')),
            ],
            options={
                'verbose_name': 'application',
                'verbose_name_plural': 'applications',
                'ordering': ['name_application'],
            },
            bases=(models.Model, core.untils.universal_validator.UrlValidatorMixin),
        ),
        migrations.CreateModel(
            name='HomeNewsSharesBanner',
            fields=[
                ('banners_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.banners')),
                ('url_banner', models.URLField(blank=True, help_text='Input url to Banner', max_length=300, null=True)),
                ('speed_banner', models.IntegerField(blank=True, default=5, help_text='Input speed to Banner', null=True)),
                ('gallery_banner', models.OneToOneField(blank=True, help_text='Select Gallery to Banner', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery')),
            ],
            options={
                'verbose_name': 'home news and shares banner',
                'verbose_name_plural': 'home news and shares banners',
            },
            bases=('core.banners',),
        ),
        migrations.CreateModel(
            name='HomeBanner',
            fields=[
                ('banners_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.banners')),
                ('url_banner', models.URLField(blank=True, help_text='Input url Banner', max_length=300, null=True)),
                ('text_banner', models.TextField(blank=True, help_text='Input text to Banner', null=True)),
                ('speed_banner', models.IntegerField(blank=True, default=5, help_text='Input speed to Banner', null=True)),
                ('gallery_banner', models.OneToOneField(blank=True, help_text='Select Gallery to Banner', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery')),
            ],
            options={
                'verbose_name': 'home banner',
                'verbose_name_plural': 'home banners',
            },
            bases=('core.banners',),
        ),
        migrations.CreateModel(
            name='BackgroundBanner',
            fields=[
                ('banners_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.banners')),
                ('gallery_banner', models.OneToOneField(blank=True, help_text='Select Gallery to Banner', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery')),
            ],
            options={
                'verbose_name': 'background banner',
                'verbose_name_plural': 'background banners',
            },
            bases=('core.banners',),
        ),
    ]
