# Generated by Django 4.2.1 on 2023-06-15 12:00

import core.untils.cinema_validator
import core.untils.universal_validator
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cinemas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_cinema', models.CharField(help_text='Input name Cinema', max_length=300, validators=[django.core.validators.MinLengthValidator(1)])),
                ('description_cinema', models.TextField(blank=True, help_text='Input description Cinema', null=True)),
                ('logo_cinema', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('main_foto_cinema', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('amenities_cinema', models.TextField(blank=True, help_text='Input amenities Cinema', null=True)),
                ('data_create_cinema', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'cinema',
                'verbose_name_plural': 'cinemas',
                'ordering': ['name_cinema'],
            },
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin),
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_gallery', models.CharField(help_text='Input name Gallery', max_length=300, validators=[django.core.validators.MinLengthValidator(1)])),
            ],
            options={
                'verbose_name': 'gallery',
                'verbose_name_plural': 'gallerys',
            },
        ),
        migrations.CreateModel(
            name='GalleryPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery')),
            ],
            options={
                'verbose_name': 'gallery_photo',
                'verbose_name_plural': 'gallery_photos',
            },
        ),
        migrations.CreateModel(
            name='Halls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_hall', models.IntegerField(default=1, help_text='Input number hall')),
                ('description_hall', models.TextField(blank=True, help_text='Input description hall', null=True)),
                ('photo_shem_hall', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('main_foto_hall', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('count_seats_hall', models.IntegerField(blank=True, default=1, help_text='Input count seats into hall', null=True)),
                ('data_create_hall', models.DateTimeField(auto_now_add=True)),
                ('cinema_hall', models.ForeignKey(help_text='Select Cinema to Hall', on_delete=django.db.models.deletion.CASCADE, to='cinema.cinemas')),
                ('gallery_hall', models.OneToOneField(blank=True, help_text='Select Gallery', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery')),
            ],
            options={
                'verbose_name': 'hall',
                'verbose_name_plural': 'halls',
                'ordering': ['number_hall'],
            },
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin, core.untils.universal_validator.CounterValidatorMixin),
        ),
        migrations.CreateModel(
            name='Rows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_row', models.PositiveIntegerField(default=1, help_text='Input number row into hall')),
                ('row_hall', models.ForeignKey(help_text='Select Hall to Row', on_delete=django.db.models.deletion.CASCADE, to='cinema.halls')),
            ],
            options={
                'verbose_name': 'row',
                'verbose_name_plural': 'rows',
            },
        ),
        migrations.CreateModel(
            name='Seats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_seat', models.PositiveIntegerField(default=1, help_text='Input number seat into row', unique=True)),
            ],
            options={
                'verbose_name': 'seat',
                'verbose_name_plural': 'seats',
            },
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_seo', models.URLField(blank=True, help_text='Input url address SEO', null=True)),
                ('title_seo', models.CharField(help_text='Input title SEO', max_length=300, validators=[django.core.validators.MinLengthValidator(1)])),
                ('keywords_seo', models.CharField(help_text='Input keywords SEO', max_length=400, validators=[core.untils.cinema_validator.SeoValidator.validate_keywords])),
                ('description_seo', models.TextField(blank=True, help_text='Input description SEO', null=True)),
            ],
            bases=(models.Model, core.untils.universal_validator.UrlValidatorMixin),
        ),
        migrations.CreateModel(
            name='SeatsRows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_seat', models.BooleanField(default=False, help_text='Select status Seat')),
                ('row', models.ForeignKey(help_text='row', on_delete=django.db.models.deletion.CASCADE, to='cinema.rows')),
                ('seat', models.ForeignKey(help_text='seat', on_delete=django.db.models.deletion.CASCADE, to='cinema.seats')),
            ],
            options={
                'verbose_name': 'seat_in_row',
                'verbose_name_plural': 'seats_in_row',
                'unique_together': {('row', 'seat')},
            },
        ),
        migrations.AddField(
            model_name='seats',
            name='seat_row',
            field=models.ManyToManyField(help_text='Select Row to Seat', through='cinema.SeatsRows', to='cinema.rows'),
        ),
        migrations.CreateModel(
            name='Photos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(help_text='Upload an image. Supported formats: JPEG, PNG', upload_to='static/photos/')),
                ('gallery', models.ManyToManyField(help_text='Select Gallery', through='cinema.GalleryPhotos', to='cinema.gallery')),
            ],
            options={
                'verbose_name': 'photo',
                'verbose_name_plural': 'photos',
            },
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin),
        ),
        migrations.CreateModel(
            name='Movies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_movie', models.CharField(help_text='Input name Movie', max_length=300, validators=[django.core.validators.MinLengthValidator(1)])),
                ('description_movie', models.TextField(blank=True, help_text='Input description Movie', null=True)),
                ('type_movie', models.CharField(choices=[('2d', '2D'), ('3d', '3D'), ('imax', 'IMAX')], help_text='Check type Movie', validators=[core.untils.cinema_validator.MovieValidator.validate_check_type])),
                ('main_foto_movie', models.ImageField(blank=True, help_text='Upload an image. Supported formats: JPEG, PNG', null=True, upload_to='static/photos/')),
                ('status_movie', models.CharField(blank=True, choices=[('new', 'Новинка'), ('soon', 'Скоро в прокаті'), ('old', 'Старий фільм')], default='soon', help_text='Select status Movie', null=True)),
                ('url_movie', models.URLField(blank=True, help_text='Input url Movie', max_length=300, null=True)),
                ('data_create_movie', models.DateTimeField(auto_now_add=True)),
                ('gallery_movie', models.OneToOneField(blank=True, help_text='Select Gallery', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery')),
                ('seo_movie', models.OneToOneField(blank=True, help_text='Select SEO', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.seo')),
            ],
            options={
                'verbose_name': 'movie',
                'verbose_name_plural': 'movies',
                'ordering': ['name_movie'],
            },
            bases=(models.Model, core.untils.universal_validator.PhotoValidatorMixin, core.untils.universal_validator.UrlValidatorMixin),
        ),
        migrations.AddField(
            model_name='halls',
            name='seo_hall',
            field=models.OneToOneField(blank=True, help_text='Select SEO', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.seo'),
        ),
        migrations.AddField(
            model_name='galleryphotos',
            name='photos',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.photos'),
        ),
        migrations.AddField(
            model_name='cinemas',
            name='gallery_cinema',
            field=models.OneToOneField(blank=True, help_text='Select Gallery', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.gallery'),
        ),
        migrations.AddField(
            model_name='cinemas',
            name='seo_cinema',
            field=models.OneToOneField(blank=True, help_text='Select SEO', null=True, on_delete=django.db.models.deletion.CASCADE, to='cinema.seo'),
        ),
    ]
